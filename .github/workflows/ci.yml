name: CI/CD

on:
  release:
    types: [created]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
            binary_path: "src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg"
            artifact_name: "xRay_aarch64.dmg"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
            binary_path: "src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg"
            artifact_name: "xRay_x64.dmg"
          - platform: "ubuntu-latest"
            args: ""
            binary_path: "src-tauri/target/release/bundle/appimage/*.AppImage"
            artifact_name: "xRay.AppImage"
          - platform: "windows-latest"
            args: ""
            binary_path: "src-tauri/target/release/bundle/msi/*.msi"
            artifact_name: "xRay_x64.msi"

    runs-on: ${{ matrix.platform }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 22.9
      uses: actions/setup-node@v4
      with:
        node-version: 22.9

    - name: Install Yarn
      run: |
        corepack enable
        corepack prepare yarn@3.6.4 --activate
        
    - name: Install Rust (stable)
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
    
    - name: Install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libjavascriptcoregtk-4.1-dev libappindicator3-dev librsvg2-dev pkg-config patchelf libsoup-3.0-dev libglib2.0-dev
    
    - name: Install frontend dependencies
      run: yarn install
      
    - name: Build
      run: yarn tauri build ${{ matrix.args }}
      
    - name: Rename artifacts
      shell: bash
      run: |
        if [ -f ${{ matrix.binary_path }} ]; then
          mv ${{ matrix.binary_path }} ${{ matrix.artifact_name }}
        fi
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifacts
      
      - name: Display structure of downloaded files
        run: ls -R artifacts/
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/xRay_aarch64.dmg/*
            artifacts/xRay_x64.dmg/*
            artifacts/xRay.AppImage/*
            artifacts/xRay_x64.msi/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          token: ${{ secrets.XRAY_TOKEN }}
